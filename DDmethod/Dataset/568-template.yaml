Transform: AWS::Serverless-2016-10-31
Parameters:
  LambdaFunctionName:
    Description: The name you will give to this catalog in Athena. It will also be used as the function name. This name must satisfy the pattern ^[a-z0-9-_]{1,64}$
    Type: String
    AllowedPattern: ^[a-z0-9-_]{1,64}$
  LambdaFunctionRole:
    Description: ARN of  the IAM Role to be used for Lambda
    Type: String
  DefaultConnectionString:
    Description: 'The default connection string is used when catalog is "lambda:${LambdaFunctionName}".
      Catalog specific Connection Strings can be added later. Format: ${DatabaseType}://${NativeJdbcConnectionString}.'
    Type: String
  SecretNamePrefix:
    Description: Used to create resource-based authorization policy for "secretsmanager:GetSecretValue" action. E.g. All Athena JDBC Federation secret names can be prefixed with "AthenaJdbcFederation" and authorization policy will allow "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:AthenaJdbcFederation*". Parameter value in this case should be "AthenaJdbcFederation". If you do not have a prefix, you can manually update the IAM policy to add allow any secret names.
    Type: String
  SpillBucket:
    Description: The name of the bucket where this function can spill data.
    Type: String
  SpillPrefix:
    Description: The prefix within SpillBucket where this function can spill data.
    Type: String
    Default: athena-spill
  LambdaTimeout:
    Description: Maximum Lambda invocation runtime in seconds. (min 1 - 900 max)
    Default: 900
    Type: Number
  LambdaMemory:
    Description: Lambda memory in MB (min 128 - 3008 max).
    Default: 3008
    Type: Number
  DisableSpillEncryption:
    Description: If set to 'false' data spilled to S3 is encrypted with AES GCM
    Default: 'false'
    Type: String
  SecurityGroupIds:
    Description: One or more SecurityGroup IDs corresponding to the SecurityGroup that should be applied to the Lambda function. (e.g. sg1,sg2,sg3)
    Type: List<AWS::EC2::SecurityGroup::Id>
  SubnetIds:
    Description: One or more Subnet IDs corresponding to the Subnet that the Lambda function can use to access you data source. (e.g. subnet1,subnet2)
    Type: List<AWS::EC2::Subnet::Id>
  LicenseKey:
    Description: License Key For Connector
    Type: String
    Default: 6+JZcKp9l4cVnCw9wZNd46pxDhTI82oU4RTXtYUAeWCTpPTGUdhmqpYsWhIbV/rlDB9xYBVyhEE9BQMJzB7gH+EBqcsi1HostmQybJJZTc/XfCP8xOE4BQ==;S5ZFJO6QCuF+Zf4aqGN+O8HBoqwthRpU6pICiZrrqIWiD8l2wKUINYjh28mYlNudImxn6YqclwIm3dtpJapIm8FLU7bzTsEsFSsF83i4KVzdujIRuoWFJvemwusT6mzWzArH5Kw8hipVKuhNg6JJDFUA2T+fUdkZldQhqV+9t/vC55xibohDN2zecGO/JCaaMhrgowDwmbAHPJ9fti3GjQQx+MxDYDlrm5lB7AtkwaNzUWhqMDCJ+R4oBeg+zZq7tUbiUpOG6pD0jrE+pbBZv773F+0KZyou2EqLqdoMTToETrdQ60zc9h5XR5VoPH6QSvvGozuoM8raZ44WIW/Zrw==
Resources:
  JdbcConnectorConfig:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          disable_spill_encryption:
            Ref: DisableSpillEncryption
          spill_bucket:
            Ref: SpillBucket
          spill_prefix:
            Ref: SpillPrefix
          default:
            Ref: DefaultConnectionString
          licenceKey:
            Ref: LicenseKey
      FunctionName:
        Ref: LambdaFunctionName
      Handler: com.trianz.accelerators.connectors.athena.jdbc.MultiplexingJdbcCompositeHandler
      CodeUri:
        Bucket: <%REPO_BUCKET%>
        Key: d5e5518e-fa2f-4faf-9ecd-398cd13b05cb
      Description: Enables Amazon Athena to communicate with Databases using JDBC
      Runtime: java11
      Timeout:
        Ref: LambdaTimeout
      MemorySize:
        Ref: LambdaMemory
      Role:
        Ref: LambdaFunctionRole
      Policies:
      - Statement:
        - Action:
          - secretsmanager:GetSecretValue
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SecretNamePrefix}*
        Version: '2012-10-17'
      - Statement:
        - Action:
          - logs:CreateLogGroup
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
        Version: '2012-10-17'
      - Statement:
        - Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaFunctionName}:*
        Version: '2012-10-17'
      - Statement:
        - Action:
          - athena:GetQueryExecution
          Effect: Allow
          Resource: '*'
        Version: '2012-10-17'
      - S3CrudPolicy:
          BucketName:
            Ref: SpillBucket
      - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          Ref: SecurityGroupIds
        SubnetIds:
          Ref: SubnetIds
