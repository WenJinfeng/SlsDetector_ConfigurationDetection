AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Metadata:
  AWS::ServerlessRepo::Application:
    Name: cw-logs-to-lambda
    Description: Filters CloudWatch logs and publishes them to another lamdba function
    Author: Keeton Hodgson
    SpdxLicenseId: MIT
    # paths are relative to .aws-sam/build directory
    LicenseUrl: ../../LICENSE
    ReadmeUrl: ../../README.md
    Labels: [serverless,lambda,CloudWatch,logs]
    HomePageUrl: https://github.com/keetonian/cw-logs-to-lambda
    # Update the semantic version and run sam publish to publish a new version of your app
    SemanticVersion: 0.0.1
    # best practice is to use git tags for each release and link to the version tag as your source code URL
    SourceCodeUrl: https://github.com/keetonian/cw-logs-to-lambda/tree/0.0.1

Parameters:
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging, e.g., ERROR, INFO, DEBUG, etc
    Default: INFO
  DestinationFunctionName:
    Description: Name of the function to which this application will send log messages
    Type: String
  LogGroupName:
    Description: Log group to listen to (has to be in same account and region)
    Type: String
  FilterPattern:
    Description: Pattern for filtering log events
    Type: String
    Default: ERROR
  OnlySendLogMessage:
    Description: By default, this function will send the log message, id, and timestamp, unless this is set to True.
    Type: String
    Default: 'False'
    AllowedValues: ['True','False']

Globals:
  Function:
    Runtime: python3.7
    Tracing: Active
    Timeout: 60
    Environment:
      Variables:
        LOG_LEVEL: !Ref LogLevel

Resources:
  LogsToLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: handlers.logs_to_lambda
      Environment:
        Variables:
          LAMBDA_NAME: !Ref DestinationFunctionName
          MESSAGE_ONLY: !Ref OnlySendLogMessage
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref DestinationFunctionName
      Events:
       ErrorLogEvent:
         Type: CloudWatchLogs
         Properties:
           FilterPattern: !Ref FilterPattern
           LogGroupName: !Ref LogGroupName
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt LambdaDLQ.Arn

  LambdaDLQ:
    Type: AWS::SQS::Queue

Outputs:
  LogsToLambdaName:
    Description: "Lambda Function Name"
    Value: !Ref LogsToLambda
  LogsToLambdaArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt LogsToLambda.Arn
  SnsForwarderFunctionDLQArn:
    Description: "DLQ ARN"
    Value: !GetAtt LambdaDLQ.Arn